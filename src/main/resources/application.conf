# custom mailbox
my-special-mailbox {
  mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"
}
# end of mailbox

# my dispatcher with fork-join-executor
my-special-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "fork-join-executor"
  # Configuration for the fork join pool
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 2
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 2.0
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 10
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 100
}
# end of my dispatcher with fork-join-pool

# my dispatcher with thread-pool-executor
my-special-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "thread-pool-executor"
  # Configuration for the fork join pool
  thread-pool-executor {
    fixed-pool-size = 16
    # Keep alive time for threads
    keep-alive-time = 60s
    # Allow core threads to time out
    allow-core-timeout = off
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 100
  # How long time the dispatcher will wait for new actors until it shuts down
  shutdown-timeout = 60s
}
# end of my dispatcher with thread-pool-executor

# my pinned dispatcher
my-pinned-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = PinnedDispatcher
  # What kind of ExecutionService to use
  executor = "thread-pool-executor"

  # Note that thread-pool-executor configuration is NOT applicable. This is because every actor
  # will have its own thread pool when using PinnedDispatcher, and that pool will have only one
  # thread.
}
# end of my pinned dispatcher

# my blocking dispatcher
my-blocking-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 16
  }
  throughput = 1
}
# end of my blocking dispatcher